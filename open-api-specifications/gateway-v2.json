{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "WSO2 API Manager - Gateway",
    "description": "This specifies a **RESTful API** for WSO2 **API Manager** - Gateway.\n\nPlease see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.7.206/components/apimgt/org.wso2.carbon.apimgt.rest.api.gateway.v2/src/main/resources/gateway-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification.\n",
    "contact": {
      "name": "WSO2",
      "url": "http://wso2.com/products/api-manager/",
      "email": "architecture@wso2.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "https"
  ],
  "host": "apis.wso2.com",
  "basePath": "/api/am/gateway/v2",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/redeploy-api": {
      "post": {
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v2/redeploy-api?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
          }
        ],
        "summary": "Re Deploy the API in the gateway",
        "description": "This operation is used to re deploy an API in the gateway. If the Tenant domain is not provided carbon.super\nwill be picked as the Tenant domain.\n",
        "parameters": [
          {
            "name": "apiName",
            "description": "Name of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "version",
            "description": "version of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "tenantDomain",
            "description": "Tenant Domain of the API\n",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": [
          "ReDeploy API"
        ],
        "responses": {
          "200": {
            "description": "OK.\nAPI successfully deployed in the Gateway.\n",
            "schema": {
              "$ref": "#/definitions/DeployResponse"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/undeploy-api": {
      "post": {
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v2/undeploy-api?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
          }
        ],
        "summary": "Uneploy the API in the gateway",
        "description": "This operation is used to undeploy an API in the gateway. If the Tenant domain is not provided carbon.super will\nbe picked as the Tenant domain.\n",
        "parameters": [
          {
            "name": "apiName",
            "description": "Name of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "version",
            "description": "version of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "tenantDomain",
            "description": "Tenant Domain of the API\n",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": [
          "Undeploy API"
        ],
        "responses": {
          "200": {
            "description": "OK.\nAPI successfully undeployed from the Gateway.\n",
            "schema": {
              "$ref": "#/definitions/DeployResponse"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/api-artifact": {
      "get": {
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "\"curl -k -X GET \"https://127.0.0.1:9443/api/am/gateway/v2/api-artifact?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
          }
        ],
        "summary": "Get API artifact from the storage",
        "description": "This operation is used to get the local entries, sequences and endpoints from the storage. If the Tenant domain\nis not provided carbon.super will be picked as the Tenant domain.\n",
        "parameters": [
          {
            "name": "apiName",
            "description": "Name of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "version",
            "description": "version of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "tenantDomain",
            "description": "Tenant Domain of the API\n",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": [
          "Get API Artifacts"
        ],
        "responses": {
          "200": {
            "description": "OK.\nAPI artifact successfully retrieved from the storage.\n",
            "schema": {
              "$ref": "#/definitions/APIArtifact"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/local-entry": {
      "get": {
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "\"curl -k -X GET \"https://127.0.0.1:9443/api/am/gateway/v2/local-entry?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
          }
        ],
        "summary": "Get Local Entry from the storage",
        "description": "This operation is used to get local entry from the storage.If the Tenant domain is not provided carbon.super\nwill be picked as the Tenant domain.\n",
        "parameters": [
          {
            "name": "apiName",
            "description": "Name of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "version",
            "description": "version of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "tenantDomain",
            "description": "Tenant Domain of the API\n",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": [
          "Get API Artifacts"
        ],
        "responses": {
          "200": {
            "description": "OK.\nLocal entry for the API successfully retrieved from the storage.\n",
            "schema": {
              "$ref": "#/definitions/LocalEntry"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/sequence": {
      "get": {
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v2/sequence?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
          }
        ],
        "summary": "Get sequences from the storage",
        "description": "This operation is used to get the API sequence from the storage. If the Tenant domain is not provided carbon.super\nwill be picked as the Tenant domain.\n",
        "parameters": [
          {
            "name": "apiName",
            "description": "Name of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "version",
            "description": "version of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "tenantDomain",
            "description": "Tenant Domain of the API\n",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": [
          "Get API Artifacts"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSequences for the API successfully retrieved from the storage.\n",
            "schema": {
              "$ref": "#/definitions/Sequences"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/end-points": {
      "get": {
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v2/end-points?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
          }
        ],
        "summary": "Get end-points from the storage for the API",
        "description": "This operation is used to get the end-points from the storage. If the Tenant domain is not provided\ncarbon.super will be picked as the Tenant domain.\n",
        "parameters": [
          {
            "name": "apiName",
            "description": "Name of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "version",
            "description": "version of the API\n",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "tenantDomain",
            "description": "Tenant Domain of the API\n",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": [
          "Get API Artifacts"
        ],
        "responses": {
          "200": {
            "description": "OK.\nEnd-points successfully retrieved from the storage for the API.\n",
            "schema": {
              "$ref": "#/definitions/DeployResponse"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    }
  },
  "parameters": {
    "apiId-Q": {
      "name": "apiId",
      "in": "query",
      "description": "**API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\nShould be formatted as **provider-name-version**.\n",
      "required": true,
      "type": "string"
    }
  },
  "responses": {
    "BadRequest": {
      "description": "Bad Request. Invalid request or validation error.",
      "schema": {
        "$ref": "#/definitions/Error"
      },
      "examples": {
        "application/json": {
          "code": 400,
          "message": "Bad Request",
          "description": "Invalid request or validation error",
          "moreInfo": "",
          "error": []
        }
      }
    },
    "NotFound": {
      "description": "Not Found. The specified resource does not exist.",
      "schema": {
        "$ref": "#/definitions/Error"
      },
      "examples": {
        "application/json": {
          "code": 404,
          "message": "Not Found",
          "description": "The specified resource does not exist",
          "moreInfo": "",
          "error": []
        }
      }
    }
  },
  "definitions": {
    "DeployResponse": {
      "title": "Deploy API Response",
      "required": [
        "deployStatus"
      ],
      "properties": {
        "deployStatus": {
          "description": "This attribute declares whether deployment task is successful or failed.\n",
          "type": "string",
          "enum": [
            "DEPLOYED",
            "ERROR"
          ],
          "example": "DEPLOYED"
        },
        "jsonPayload": {
          "description": "Attributes that returned after the API deployment\n",
          "type": "string"
        }
      }
    },
    "Endpoints": {
      "title": "Endpoints Response",
      "properties": {
        "deployedEndpoints": {
          "description": "The end points which has been deployed in the gateway\n",
          "type": "array",
          "items": {
            "type": "string",
            "example": "<endpoint xmlns=\"http://ws.apache.org/ns/synapse\" name=\"PizzaShackAPI--v2.0.0_APIproductionEndpoint\"><http uri-template=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"><timeout><responseAction>fault</responseAction></timeout></http><property name=\"ENDPOINT_ADDRESS\" value=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"/></endpoint>"
          }
        },
        "UnDeployedEndpoints": {
          "description": "The end points which has not been deployed in the gateway\n",
          "type": "array",
          "items": {
            "type": "string",
            "example": "<endpoint xmlns=\"http://ws.apache.org/ns/synapse\" name=\"PizzaShackAPI--v2.0.0_APIproductionEndpoint\"><http uri-template=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"><timeout><responseAction>fault</responseAction></timeout></http><property name=\"ENDPOINT_ADDRESS\" value=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"/></endpoint>"
          }
        }
      }
    },
    "Sequences": {
      "title": "Sequences Response",
      "properties": {
        "deployedSequences": {
          "description": "The sequences which has been deployed in the gateway\n",
          "type": "array",
          "items": {
            "type": "string",
            "example": "<sequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"PizzaShackAPI--v2.0.0_APIproductionEndpoint\"><http uri-template=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"><timeout><responseAction>fault</responseAction></timeout></http><property name=\"ENDPOINT_ADDRESS\" value=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"/></sequnce>"
          }
        },
        "UnDeployedSequences": {
          "description": "The sequences which has not been deployed in the gateway\n",
          "type": "array",
          "items": {
            "type": "string",
            "example": "<sequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"PizzaShackAPI--v2.0.0_APIproductionEndpoint\"><http uri-template=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"><timeout><responseAction>fault</responseAction></timeout></http><property name=\"ENDPOINT_ADDRESS\" value=\"https://localhost:9443/am/sample/pizzashack/v2/api/\"/></sequnce>"
          }
        }
      }
    },
    "LocalEntry": {
      "title": "LocalEntry Response",
      "properties": {
        "deployedLocalEntries": {
          "description": "The local entries which has been deployed in the gateway\n",
          "type": "array",
          "items": {
            "type": "string",
            "example": "<localEntry xmlns=\"http://ws.apache.org/ns/synapse\" key=\"ga-config-key\" type=\"1\"><GoogleAnalyticsTracking xmlns=\"\">\n\t<!--Enable/Disable Google Analytics Tracking -->\n\t<Enabled>false</Enabled>\n\n\t<!-- Google Analytics Tracking ID -->\n\t<TrackingID>UA-XXXXXXXX-X</TrackingID>\n\n</GoogleAnalyticsTracking></localEntry>"
          }
        },
        "UnDeployedLocalEntries": {
          "description": "The local entries which has not been deployed in the gateway\n",
          "type": "array",
          "items": {
            "type": "string",
            "example": "<localEntry xmlns=\"http://ws.apache.org/ns/synapse\" key=\"ga-config-key\" type=\"1\"><GoogleAnalyticsTracking xmlns=\"\">\n\t<!--Enable/Disable Google Analytics Tracking -->\n\t<Enabled>false</Enabled>\n\n\t<!-- Google Analytics Tracking ID -->\n\t<TrackingID>UA-XXXXXXXX-X</TrackingID>\n\n</GoogleAnalyticsTracking></localEntry>"
          }
        }
      }
    },
    "APIArtifact": {
      "title": "API Artifact Response",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Artifacts Returned\n",
          "example": 1
        },
        "endpoints": {
          "$ref": "#/definitions/Endpoints"
        },
        "localEntries": {
          "$ref": "#/definitions/LocalEntry"
        },
        "sequences": {
          "$ref": "#/definitions/Sequences"
        }
      }
    },
    "Error": {
      "title": "Error object returned with 4XX HTTP status",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "description": {
          "type": "string",
          "description": "A detail description about the error message.\n"
        },
        "moreInfo": {
          "type": "string",
          "description": "Preferably an url with more details about the error.\n"
        },
        "error": {
          "type": "array",
          "description": "If there are more than one error list them out.\nFor example, list out validation errors by each field.\n",
          "items": {
            "$ref": "#/definitions/ErrorListItem"
          }
        }
      }
    },
    "ErrorListItem": {
      "title": "Description of individual errors that may have occurred during a request.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Description about individual errors occurred\n"
        }
      }
    }
  }
}